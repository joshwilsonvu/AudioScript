TODO
Bugs
DONE use QObject::disconnect to take care of closing errors where emitted signals like changed() cause slots to be called on destroyed objects
DONE fix replacement in files so that the entered class name actually replaces CLASSNAME in the default file
Future
create a class list widget in which double-clicking opens the class
implement audioscriptcompiler, code to produce libraries for audioscriptlibrary to load--and ~get minimum viable product working~
modularization; try to refactor some of the specific functionality of MainWindow to other classes
no globals (done pretty good so far)
documentation
DONE create a window for compiler feedback, use within AudioScriptCompiler
DONE make sure all member data fields are prefixed with "m_"

create a streamlined, academic, consistent way to connect frontend and backend



AUDIOSCRIPT NEXT LEVEL
--Major overhaul of the stack based design (good timing because this hasn't been started).
Instead of a single widget that uses the native list to make a linear stack of
effects, I am adding another branch of the application that provides a simulink-
like graphics area for the user to add and connect AudioScripts and modify
their parameters. By supplying a library of AudioScripts, users will be able to
use the application without having to write any code.
--Make the current MainWindow (coding AudioScripts) the secondary window to the
new branch (linking AudioScripts together).
--Adjust AudioScript process() function to take and return a single sample, take care of buffering behind the scenes. Get rid of the ugly std::vector<sample_t>& parameter and take sample_t instead.
